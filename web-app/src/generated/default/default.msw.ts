/**
 * Generated by orval v7.2.0 üç∫
 * Do not edit manually.
 * (title)
 * OpenAPI spec version: 0.0.0
 */
import { faker } from '@faker-js/faker'
import { HttpResponse, delay, http } from 'msw'
import type { Blog } from '.././model'

export const getCreateBlogCotnentResponseMock = (
  overrideResponse: Partial<Blog> = {},
): Blog => ({
  id: faker.number.int({ min: undefined, max: undefined }),
  ...overrideResponse,
})

export const getCreateBlogCotnentMockHandler = (
  overrideResponse?:
    | Blog
    | ((
        info: Parameters<Parameters<typeof http.post>[1]>[0],
      ) => Promise<Blog> | Blog),
) => {
  return http.post('*/', async (info) => {
    await delay(1000)

    return new HttpResponse(
      JSON.stringify(
        overrideResponse !== undefined
          ? typeof overrideResponse === 'function'
            ? await overrideResponse(info)
            : overrideResponse
          : getCreateBlogCotnentResponseMock(),
      ),
      { status: 200, headers: { 'Content-Type': 'application/json' } },
    )
  })
}
export const getDefaultMock = () => [getCreateBlogCotnentMockHandler()]
