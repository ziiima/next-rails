/**
 * Generated by orval v7.2.0 🍺
 * Do not edit manually.
 * (title)
 * OpenAPI spec version: 0.0.0
 */
import { useMutation } from '@tanstack/react-query'
import type {
  MutationFunction,
  UseMutationOptions,
  UseMutationResult,
} from '@tanstack/react-query'
import type { Blog, CreateBlogCotnentBody } from '.././model'
import { restclient } from '../../utils/rest-client'

export const createBlogCotnent = (
  createBlogCotnentBody: CreateBlogCotnentBody,
) => {
  return restclient<Blog>({
    url: `/`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: createBlogCotnentBody,
  })
}

export const getCreateBlogCotnentMutationOptions = <
  TError = unknown,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof createBlogCotnent>>,
    TError,
    { data: CreateBlogCotnentBody },
    TContext
  >
}): UseMutationOptions<
  Awaited<ReturnType<typeof createBlogCotnent>>,
  TError,
  { data: CreateBlogCotnentBody },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {}

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof createBlogCotnent>>,
    { data: CreateBlogCotnentBody }
  > = (props) => {
    const { data } = props ?? {}

    return createBlogCotnent(data)
  }

  return { mutationFn, ...mutationOptions }
}

export type CreateBlogCotnentMutationResult = NonNullable<
  Awaited<ReturnType<typeof createBlogCotnent>>
>
export type CreateBlogCotnentMutationBody = CreateBlogCotnentBody
export type CreateBlogCotnentMutationError = unknown

export const useCreateBlogCotnent = <
  TError = unknown,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof createBlogCotnent>>,
    TError,
    { data: CreateBlogCotnentBody },
    TContext
  >
}): UseMutationResult<
  Awaited<ReturnType<typeof createBlogCotnent>>,
  TError,
  { data: CreateBlogCotnentBody },
  TContext
> => {
  const mutationOptions = getCreateBlogCotnentMutationOptions(options)

  return useMutation(mutationOptions)
}
